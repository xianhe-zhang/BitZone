{"ast":null,"code":"import _regeneratorRuntime from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import Card from'../../shared/components/UIElements/Card';import Input from'../../shared/components/FormElements/Input';import Button from'../../shared/components/FormElements/Button';import ErrorModal from'../../shared/components/UIElements/ErrorModal';import LoadingSpinner from'../../shared/components/UIElements/LoadingSpinner';import ImageUpload from'../../shared/components/FormElements/ImageUpload';import{VALIDATOR_EMAIL,VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE}from'../../shared/util/validators';import{useForm}from'../../shared/hooks/form-hook';import{useHttpClient}from'../../shared/hooks/http-hook';import{AuthContext}from'../../shared/context/auth-context';import'./Auth.css';var Auth=function Auth(){var auth=useContext(AuthContext);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoginMode=_useState2[0],setIsLoginMode=_useState2[1];var _useHttpClient=useHttpClient(),isLoading=_useHttpClient.isLoading,error=_useHttpClient.error,sendRequest=_useHttpClient.sendRequest,clearError=_useHttpClient.clearError;var _useForm=useForm({email:{value:'',isValid:false},password:{value:'',isValid:false}},false),_useForm2=_slicedToArray(_useForm,3),formState=_useForm2[0],inputHandler=_useForm2[1],setFormData=_useForm2[2];var switchModeHandler=function switchModeHandler(){if(!isLoginMode){setFormData(_objectSpread(_objectSpread({},formState.inputs),{},{name:undefined,image:undefined}),formState.inputs.email.isValid&&formState.inputs.password.isValid);}else{setFormData(_objectSpread(_objectSpread({},formState.inputs),{},{name:{value:'',isValid:false},image:{value:null,isValid:false}}),false);}setIsLoginMode(function(prevMode){return!prevMode;});};var authSubmitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var responseData,formData,_responseData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!isLoginMode){_context.next=13;break;}_context.prev=2;_context.next=5;return sendRequest(process.env.REACT_URL+'/api/users/login','POST',JSON.stringify({email:formState.inputs.email.value,password:formState.inputs.password.value}),{'Content-Type':'application/json'});case 5:responseData=_context.sent;auth.login(responseData.userId,responseData.token);_context.next=11;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);case 11:_context.next=27;break;case 13:_context.prev=13;formData=new FormData();formData.append('email',formState.inputs.email.value);formData.append('name',formState.inputs.name.value);formData.append('password',formState.inputs.password.value);formData.append('image',formState.inputs.image.value);_context.next=21;return sendRequest(process.env.REACT_URL+'/api/users/signup','POST',formData);case 21:_responseData=_context.sent;auth.login(_responseData.userId,_responseData.token);_context.next=27;break;case 25:_context.prev=25;_context.t1=_context[\"catch\"](13);case 27:case\"end\":return _context.stop();}}},_callee,null,[[2,9],[13,25]]);}));return function authSubmitHandler(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ErrorModal,{error:error,onClear:clearError}),/*#__PURE__*/React.createElement(Card,{className:\"authentication\"},isLoading&&/*#__PURE__*/React.createElement(LoadingSpinner,{asOverlay:true}),/*#__PURE__*/React.createElement(\"h2\",null,\"Login Required\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"form\",{onSubmit:authSubmitHandler},!isLoginMode&&/*#__PURE__*/React.createElement(Input,{element:\"input\",id:\"name\",type:\"text\",label:\"Your Name\",validators:[VALIDATOR_REQUIRE()],errorText:\"Please enter a name.\",onInput:inputHandler}),!isLoginMode&&/*#__PURE__*/React.createElement(ImageUpload,{center:true,id:\"image\",onInput:inputHandler,errorText:\"Please provide an image.\"}),/*#__PURE__*/React.createElement(Input,{element:\"input\",id:\"email\",type:\"email\",label:\"E-Mail\",validators:[VALIDATOR_EMAIL()],errorText:\"Please enter a valid email address.\",onInput:inputHandler}),/*#__PURE__*/React.createElement(Input,{element:\"input\",id:\"password\",type:\"password\",label:\"Password\",validators:[VALIDATOR_MINLENGTH(6)],errorText:\"Please enter a valid password, at least 6 characters.\",onInput:inputHandler}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",disabled:!formState.isValid},isLoginMode?'LOGIN':'SIGNUP')),/*#__PURE__*/React.createElement(Button,{inverse:true,onClick:switchModeHandler},\"SWITCH TO \",isLoginMode?'SIGNUP':'LOGIN')));};export default Auth;","map":{"version":3,"sources":["/Users/marioxzhang/Desktop/bitzone-finished/frontend/src/user/pages/Auth.js"],"names":["React","useState","useContext","Card","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","email","value","isValid","password","formState","inputHandler","setFormData","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","process","env","REACT_URL","JSON","stringify","responseData","login","userId","token","formData","FormData","append"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n            process.env.REACT_URL + '/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n            process.env.REACT_URL + '/api/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}