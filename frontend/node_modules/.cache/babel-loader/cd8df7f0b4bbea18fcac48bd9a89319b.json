{"ast":null,"code":"import _regeneratorRuntime from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import UsersList from'../components/UsersList';import ErrorModal from'../../shared/components/UIElements/ErrorModal';import LoadingSpinner from'../../shared/components/UIElements/LoadingSpinner';import{useHttpClient}from'../../shared/hooks/http-hook';var Users=function Users(){var _useHttpClient=useHttpClient(),isLoading=_useHttpClient.isLoading,error=_useHttpClient.error,sendRequest=_useHttpClient.sendRequest,clearError=_useHttpClient.clearError;var _useState=useState(),_useState2=_slicedToArray(_useState,2),loadedUsers=_useState2[0],setLoadedUsers=_useState2[1];useEffect(function(){var fetchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var responseData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return sendRequest('http://localhost:5000/api/users');case 3:responseData=_context.sent;setLoadedUsers(responseData.users);_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchUsers(){return _ref.apply(this,arguments);};}();fetchUsers();},[sendRequest]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ErrorModal,{error:error,onClear:clearError}),isLoading&&/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(LoadingSpinner,null)),!isLoading&&loadedUsers&&/*#__PURE__*/React.createElement(UsersList,{items:loadedUsers}));};export default Users;","map":{"version":3,"sources":["/Users/marioxzhang/Desktop/bitzone-finished/frontend/src/user/pages/Users.js"],"names":["React","useEffect","useState","UsersList","ErrorModal","LoadingSpinner","useHttpClient","Users","isLoading","error","sendRequest","clearError","loadedUsers","setLoadedUsers","fetchUsers","responseData","users"],"mappings":"8fAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,+CAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,mDAA3B,CACA,OAASC,aAAT,KAA8B,8BAA9B,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,mBAAsDD,aAAa,EAAnE,CAAQE,SAAR,gBAAQA,SAAR,CAAmBC,KAAnB,gBAAmBA,KAAnB,CAA0BC,WAA1B,gBAA0BA,WAA1B,CAAuCC,UAAvC,gBAAuCA,UAAvC,CACA,cAAsCT,QAAQ,EAA9C,wCAAOU,WAAP,eAAoBC,cAApB,eAEAZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,UAAU,0FAAG,0LAEYJ,CAAAA,WAAW,CACpC,iCADoC,CAFvB,QAETK,YAFS,eAMfF,cAAc,CAACE,YAAY,CAACC,KAAd,CAAd,CANe,iJAAH,kBAAVF,CAAAA,UAAU,0CAAhB,CASAA,UAAU,GACX,CAXQ,CAWN,CAACJ,WAAD,CAXM,CAAT,CAaA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,UAAD,EAAY,KAAK,CAAED,KAAnB,CAA0B,OAAO,CAAEE,UAAnC,EADF,CAEGH,SAAS,eACR,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,cAAD,MADF,CAHJ,CAOG,CAACA,SAAD,EAAcI,WAAd,eAA6B,oBAAC,SAAD,EAAW,KAAK,CAAEA,WAAlB,EAPhC,CADF,CAWD,CA5BD,CA8BA,cAAeL,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}