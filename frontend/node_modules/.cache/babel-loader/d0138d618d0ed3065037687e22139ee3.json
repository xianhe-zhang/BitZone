{"ast":null,"code":"import _slicedToArray from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from'react';import Button from'./Button';import'./ImageUpload.css';var ImageUpload=function ImageUpload(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),previewUrl=_useState4[0],setPreviewUrl=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var filePickerRef=useRef();useEffect(function(){if(!file){return;}var fileReader=new FileReader();fileReader.onload=function(){setPreviewUrl(fileReader.result);};fileReader.readAsDataURL(file);},[file]);var pickedHandler=function pickedHandler(event){var pickedFile;var fileIsValid=isValid;if(event.target.files&&event.target.files.length===1){pickedFile=event.target.files[0];setFile(pickedFile);setIsValid(true);fileIsValid=true;}else{setIsValid(false);fileIsValid=false;}props.onInput(props.id,pickedFile,fileIsValid);};var pickImageHandler=function pickImageHandler(){filePickerRef.current.click();};return/*#__PURE__*/React.createElement(\"div\",{className:\"form-control\"},/*#__PURE__*/React.createElement(\"input\",{id:props.id,ref:filePickerRef,style:{display:'none'},type:\"file\",accept:\".jpg,.png,.jpeg\",onChange:pickedHandler}),/*#__PURE__*/React.createElement(\"div\",{className:\"image-upload \".concat(props.center&&'center')},/*#__PURE__*/React.createElement(\"div\",{className:\"image-upload__preview\"},previewUrl&&/*#__PURE__*/React.createElement(\"img\",{src:previewUrl,alt:\"Preview\"}),!previewUrl&&/*#__PURE__*/React.createElement(\"p\",null,\"Please pick an image.\")),/*#__PURE__*/React.createElement(Button,{type:\"button\",onClick:pickImageHandler},\"PICK IMAGE\")),!isValid&&/*#__PURE__*/React.createElement(\"p\",null,props.errorText));};export default ImageUpload;","map":{"version":3,"sources":["/Users/marioxzhang/Desktop/bitzone-finished/frontend/src/shared/components/FormElements/ImageUpload.js"],"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","display","center","errorText"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAO,mBAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAC3B,cAAwBJ,QAAQ,EAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA,eAAoCN,QAAQ,EAA5C,yCAAOO,UAAP,eAAmBC,aAAnB,eACA,eAA8BR,QAAQ,CAAC,KAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,aAAa,CAAGZ,MAAM,EAA5B,CAEAE,SAAS,CAAC,UAAM,CACd,GAAI,CAACI,IAAL,CAAW,CACT,OACD,CACD,GAAMO,CAAAA,UAAU,CAAG,GAAIC,CAAAA,UAAJ,EAAnB,CACAD,UAAU,CAACE,MAAX,CAAoB,UAAM,CACxBN,aAAa,CAACI,UAAU,CAACG,MAAZ,CAAb,CACD,CAFD,CAGAH,UAAU,CAACI,aAAX,CAAyBX,IAAzB,EACD,CATQ,CASN,CAACA,IAAD,CATM,CAAT,CAWA,GAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC7B,GAAIC,CAAAA,UAAJ,CACA,GAAIC,CAAAA,WAAW,CAAGX,OAAlB,CACA,GAAIS,KAAK,CAACG,MAAN,CAAaC,KAAb,EAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA8B,CAAxD,CAA2D,CACzDJ,UAAU,CAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb,CACAhB,OAAO,CAACa,UAAD,CAAP,CACAT,UAAU,CAAC,IAAD,CAAV,CACAU,WAAW,CAAG,IAAd,CACD,CALD,IAKO,CACLV,UAAU,CAAC,KAAD,CAAV,CACAU,WAAW,CAAG,KAAd,CACD,CACDhB,KAAK,CAACoB,OAAN,CAAcpB,KAAK,CAACqB,EAApB,CAAwBN,UAAxB,CAAoCC,WAApC,EACD,CAbD,CAeA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7Bf,aAAa,CAACgB,OAAd,CAAsBC,KAAtB,GACD,CAFD,CAIA,mBACE,2BAAK,SAAS,CAAC,cAAf,eACE,6BACE,EAAE,CAAExB,KAAK,CAACqB,EADZ,CAEE,GAAG,CAAEd,aAFP,CAGE,KAAK,CAAE,CAAEkB,OAAO,CAAE,MAAX,CAHT,CAIE,IAAI,CAAC,MAJP,CAKE,MAAM,CAAC,iBALT,CAME,QAAQ,CAAEZ,aANZ,EADF,cASE,2BAAK,SAAS,wBAAkBb,KAAK,CAAC0B,MAAN,EAAgB,QAAlC,CAAd,eACE,2BAAK,SAAS,CAAC,uBAAf,EACGvB,UAAU,eAAI,2BAAK,GAAG,CAAEA,UAAV,CAAsB,GAAG,CAAC,SAA1B,EADjB,CAEG,CAACA,UAAD,eAAe,qDAFlB,CADF,cAKE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEmB,gBAA/B,eALF,CATF,CAkBG,CAACjB,OAAD,eAAY,6BAAIL,KAAK,CAAC2B,SAAV,CAlBf,CADF,CAsBD,CA3DD,CA6DA,cAAe5B,CAAAA,WAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}