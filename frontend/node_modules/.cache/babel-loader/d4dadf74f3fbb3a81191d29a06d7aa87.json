{"ast":null,"code":"import _slicedToArray from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/marioxzhang/Desktop/bitzone-finished/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer,useEffect}from'react';import{validate}from'../../util/validators';import'./Input.css';var inputReducer=function inputReducer(state,action){switch(action.type){case'CHANGE':return _objectSpread(_objectSpread({},state),{},{value:action.val,isValid:validate(action.val,action.validators)});case'TOUCH':{return _objectSpread(_objectSpread({},state),{},{isTouched:true});}default:return state;}};var Input=function Input(props){var _useReducer=useReducer(inputReducer,{value:props.initialValue||'',isTouched:false,isValid:props.initialValid||false}),_useReducer2=_slicedToArray(_useReducer,2),inputState=_useReducer2[0],dispatch=_useReducer2[1];var id=props.id,onInput=props.onInput;var value=inputState.value,isValid=inputState.isValid;useEffect(function(){onInput(id,value,isValid);},[id,value,isValid,onInput]);var changeHandler=function changeHandler(event){dispatch({type:'CHANGE',val:event.target.value,validators:props.validators});};var touchHandler=function touchHandler(){dispatch({type:'TOUCH'});};var element=props.element==='input'?/*#__PURE__*/React.createElement(\"input\",{id:props.id,type:props.type,placeholder:props.placeholder,onChange:changeHandler,onBlur:touchHandler,value:inputState.value}):/*#__PURE__*/React.createElement(\"textarea\",{id:props.id,rows:props.rows||3,onChange:changeHandler,onBlur:touchHandler,value:inputState.value});return/*#__PURE__*/React.createElement(\"div\",{className:\"form-control \".concat(!inputState.isValid&&inputState.isTouched&&'form-control--invalid')},/*#__PURE__*/React.createElement(\"label\",{htmlFor:props.id},props.label),element,!inputState.isValid&&inputState.isTouched&&/*#__PURE__*/React.createElement(\"p\",null,props.errorText));};export default Input;","map":{"version":3,"sources":["/Users/marioxzhang/Desktop/bitzone-finished/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","errorText"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}